{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport * as Screens from \"./Screens\";\nimport * as Recipe from \"./recipes\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, null, React.createElement(StatusBar, {\n        style: \"auto\"\n      }), React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: Screens.Home,\n        options: {\n          headerShown: false\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavRec\",\n        component: NavRec,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavCat\",\n        component: NavCat,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavFav\",\n        component: NavFav,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavPlan\",\n        component: NavPlan,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Ampalaya\",\n        component: Recipe.Ampalaya,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AdobongSitaw\",\n        component: Recipe.AdobongSitaw,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BananaQue\",\n        component: Recipe.BananaQue,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Bibingka\",\n        component: Recipe.Bibingka,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BukoPie\",\n        component: Recipe.BukoPie,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ChickenCurry\",\n        component: Recipe.ChickenCurry,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AdobongIsda\",\n        component: Recipe.AdobongIsda,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"GinataangAlimasag\",\n        component: Recipe.GinataangAlimasag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Goto\",\n        component: Recipe.Goto,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Longsilog\",\n        component: Recipe.Longsilog,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Pinakbet\",\n        component: Recipe.Pinakbet,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Salad\",\n        component: Recipe.Salad,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Sinangag\",\n        component: Recipe.Sinangag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Spag\",\n        component: Recipe.Spag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TinolangManok\",\n        component: Recipe.TinolangManok,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TinolangTahong\",\n        component: Recipe.TinolangTahong,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Turon\",\n        component: Recipe.Turon,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Ukoy\",\n        component: Recipe.Ukoy,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar NavRec = function (_Component2) {\n  _inherits(NavRec, _Component2);\n\n  var _super2 = _createSuper(NavRec);\n\n  function NavRec() {\n    _classCallCheck(this, NavRec);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NavRec, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Recipes\",\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Screens.Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Screens.Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Screens.Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Screens.Plan\n      }));\n    }\n  }]);\n\n  return NavRec;\n}(Component);\n\nvar NavCat = function (_Component3) {\n  _inherits(NavCat, _Component3);\n\n  var _super3 = _createSuper(NavCat);\n\n  function NavCat() {\n    _classCallCheck(this, NavCat);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(NavCat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Categories\",\n        screenOptions: function screenOptions(_ref3) {\n          var route = _ref3.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var focused = _ref4.focused,\n                  color = _ref4.color,\n                  size = _ref4.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Screens.Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Screens.Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Screens.Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Screens.Plan\n      }));\n    }\n  }]);\n\n  return NavCat;\n}(Component);\n\nvar NavFav = function (_Component4) {\n  _inherits(NavFav, _Component4);\n\n  var _super4 = _createSuper(NavFav);\n\n  function NavFav() {\n    _classCallCheck(this, NavFav);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NavFav, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Favourites\",\n        screenOptions: function screenOptions(_ref5) {\n          var route = _ref5.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref6) {\n              var focused = _ref6.focused,\n                  color = _ref6.color,\n                  size = _ref6.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Screens.Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Screens.Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Screens.Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Screens.Plan\n      }));\n    }\n  }]);\n\n  return NavFav;\n}(Component);\n\nvar NavPlan = function (_Component5) {\n  _inherits(NavPlan, _Component5);\n\n  var _super5 = _createSuper(NavPlan);\n\n  function NavPlan() {\n    _classCallCheck(this, NavPlan);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(NavPlan, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Plan\",\n        screenOptions: function screenOptions(_ref7) {\n          var route = _ref7.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref8) {\n              var focused = _ref8.focused,\n                  color = _ref8.color,\n                  size = _ref8.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Screens.Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Screens.Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Screens.Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Screens.Plan\n      }));\n    }\n  }]);\n\n  return NavPlan;\n}(Component);\n\nvar Logo = function (_Component6) {\n  _inherits(Logo, _Component6);\n\n  var _super6 = _createSuper(Logo);\n\n  function Logo() {\n    _classCallCheck(this, Logo);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(Logo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          marginRight: 30\n        },\n        source: require(\"./assets/logo.png\")\n      });\n    }\n  }]);\n\n  return Logo;\n}(Component);","map":{"version":3,"sources":["C:/Users/jerom/reactNativeProjects/CookBook-main/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","createBottomTabNavigator","Screens","Recipe","Stack","Tab","App","Home","headerShown","NavRec","headerRight","props","headerTitle","NavCat","NavFav","NavPlan","Ampalaya","AdobongSitaw","BananaQue","Bibingka","BukoPie","ChickenCurry","AdobongIsda","GinataangAlimasag","Goto","Longsilog","Pinakbet","Salad","Sinangag","Spag","TinolangManok","TinolangTahong","Turon","Ukoy","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Recipes","Categories","Favourites","Plan","Logo","width","height","marginRight","require"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport * as Screens from \"./Screens\";\nimport * as Recipe from \"./recipes\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Home\"\n            component={Screens.Home}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"NavRec\"\n            component={NavRec}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"NavCat\"\n            component={NavCat}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"NavFav\"\n            component={NavFav}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"NavPlan\"\n            component={NavPlan}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Ampalaya\"\n            component={Recipe.Ampalaya}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"AdobongSitaw\"\n            component={Recipe.AdobongSitaw}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"BananaQue\"\n            component={Recipe.BananaQue}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Bibingka\"\n            component={Recipe.Bibingka}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"BukoPie\"\n            component={Recipe.BukoPie}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"ChickenCurry\"\n            component={Recipe.ChickenCurry}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"AdobongIsda\"\n            component={Recipe.AdobongIsda}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"GinataangAlimasag\"\n            component={Recipe.GinataangAlimasag}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Goto\"\n            component={Recipe.Goto}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Longsilog\"\n            component={Recipe.Longsilog}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Pinakbet\"\n            component={Recipe.Pinakbet}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Salad\"\n            component={Recipe.Salad}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Sinangag\"\n            component={Recipe.Sinangag}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Spag\"\n            component={Recipe.Spag}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"TinolangManok\"\n            component={Recipe.TinolangManok}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"TinolangTahong\"\n            component={Recipe.TinolangTahong}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Turon\"\n            component={Recipe.Turon}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Ukoy\"\n            component={Recipe.Ukoy}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nclass NavRec extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Recipes\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Screens.Recipes} />\n        <Tab.Screen name=\"Categories\" component={Screens.Categories} />\n        <Tab.Screen name=\"Favourites\" component={Screens.Favourites} />\n        <Tab.Screen name=\"Plan\" component={Screens.Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavCat extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Categories\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Screens.Recipes} />\n        <Tab.Screen name=\"Categories\" component={Screens.Categories} />\n        <Tab.Screen name=\"Favourites\" component={Screens.Favourites} />\n        <Tab.Screen name=\"Plan\" component={Screens.Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavFav extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Favourites\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Screens.Recipes} />\n        <Tab.Screen name=\"Categories\" component={Screens.Categories} />\n        <Tab.Screen name=\"Favourites\" component={Screens.Favourites} />\n        <Tab.Screen name=\"Plan\" component={Screens.Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavPlan extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Plan\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Screens.Recipes} />\n        <Tab.Screen name=\"Categories\" component={Screens.Categories} />\n        <Tab.Screen name=\"Favourites\" component={Screens.Favourites} />\n        <Tab.Screen name=\"Plan\" component={Screens.Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass Logo extends Component {\n  render() {\n    return (\n      <Image\n        style={{ width: 40, height: 40, marginRight: 30 }}\n        source={require(\"./assets/logo.png\")}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}