{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Home from \"./Screens/Home\";\nimport Recipes from \"./Screens/Recipes\";\nimport Categories from \"./Screens/Categories\";\nimport Plan from \"./Screens/Plan\";\nimport Favourites from \"./Screens/Favourites\";\nimport Ampalaya from \"./recipes/Ampalaya\";\nimport AdobongSitaw from \"./recipes/AdobongSitaw\";\nimport BananaQue from \"./recipes/BananaQue\";\nimport Bibingka from \"./recipes/Bibingka\";\nimport BukoPie from \"./recipes/BukoPie\";\nimport ChickenCurry from \"./recipes/ChickenCurry\";\nimport AdobongIsda from \"./recipes/AdobongIsda\";\nimport GinataangAlimasag from \"./recipes/GinataangAlimasag\";\nimport Goto from \"./recipes/Goto\";\nimport Longsilog from \"./recipes/Longsilog\";\nimport Pinakbet from \"./recipes/Pinakbet\";\nimport Salad from \"./recipes/Salad\";\nimport Sinangag from \"./recipes/Sinangag\";\nimport Spag from \"./recipes/Spag\";\nimport TinolangManok from \"./recipes/TinolangManok\";\nimport TinolangTahong from \"./recipes/TinolangTahong\";\nimport Turon from \"./recipes/Turon\";\nimport Ukoy from \"./recipes/Ukoy\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, null, React.createElement(StatusBar, {\n        style: \"auto\"\n      }), React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavRec\",\n        component: NavRec,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavCat\",\n        component: NavCat,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavFav\",\n        component: NavFav,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavPlan\",\n        component: NavPlan,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Breakfast\",\n        component: Breakfast,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Snacks\",\n        component: Snacks,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Desserts\",\n        component: Desserts,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Lunch\",\n        component: Lunch,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Dinner\",\n        component: Dinner,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Ampalaya\",\n        component: Ampalaya,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AdobongSitaw\",\n        component: AdobongSitaw,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BananaQue\",\n        component: BananaQue,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Bibingka\",\n        component: Bibingka,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BukoPie\",\n        component: BukoPie,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ChickenCurry\",\n        component: ChickenCurry,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AdobongIsda\",\n        component: AdobongIsda,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"GinataangAlimasag\",\n        component: GinataangAlimasag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Goto\",\n        component: Goto,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Longsilog\",\n        component: Longsilog,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Pinakbet\",\n        component: Pinakbet,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Salad\",\n        component: Salad,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Sinangag\",\n        component: Sinangag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Spag\",\n        component: Spag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TinolangManok\",\n        component: TinolangManok,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TinolangTahong\",\n        component: TinolangTahong,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Turon\",\n        component: Turon,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Ukoy\",\n        component: Ukoy,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar NavRec = function (_Component2) {\n  _inherits(NavRec, _Component2);\n\n  var _super2 = _createSuper(NavRec);\n\n  function NavRec() {\n    _classCallCheck(this, NavRec);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NavRec, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Recipes\",\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavRec;\n}(Component);\n\nvar NavCat = function (_Component3) {\n  _inherits(NavCat, _Component3);\n\n  var _super3 = _createSuper(NavCat);\n\n  function NavCat() {\n    _classCallCheck(this, NavCat);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(NavCat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Categories\",\n        screenOptions: function screenOptions(_ref3) {\n          var route = _ref3.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var focused = _ref4.focused,\n                  color = _ref4.color,\n                  size = _ref4.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavCat;\n}(Component);\n\nvar NavFav = function (_Component4) {\n  _inherits(NavFav, _Component4);\n\n  var _super4 = _createSuper(NavFav);\n\n  function NavFav() {\n    _classCallCheck(this, NavFav);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NavFav, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Favourites\",\n        screenOptions: function screenOptions(_ref5) {\n          var route = _ref5.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref6) {\n              var focused = _ref6.focused,\n                  color = _ref6.color,\n                  size = _ref6.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavFav;\n}(Component);\n\nvar NavPlan = function (_Component5) {\n  _inherits(NavPlan, _Component5);\n\n  var _super5 = _createSuper(NavPlan);\n\n  function NavPlan() {\n    _classCallCheck(this, NavPlan);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(NavPlan, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Plan\",\n        screenOptions: function screenOptions(_ref7) {\n          var route = _ref7.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref8) {\n              var focused = _ref8.focused,\n                  color = _ref8.color,\n                  size = _ref8.size;\n              var iconName;\n\n              if (route.name === \"Recipes\") {\n                iconName = focused ? \"md-restaurant\" : \"pizza\";\n              } else if (route.name === \"Categories\") {\n                iconName = focused ? \"list\" : \"book\";\n              } else if (route.name === \"Favourites\") {\n                iconName = focused ? \"heart-circle\" : \"heart\";\n              } else if (route.name === \"Plan\") {\n                iconName = focused ? \"calendar\" : \"bulb\";\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavPlan;\n}(Component);\n\nvar Logo = function (_Component6) {\n  _inherits(Logo, _Component6);\n\n  var _super6 = _createSuper(Logo);\n\n  function Logo() {\n    _classCallCheck(this, Logo);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(Logo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          marginRight: 30\n        },\n        source: require(\"./assets/logo.png\")\n      });\n    }\n  }]);\n\n  return Logo;\n}(Component);","map":{"version":3,"sources":["C:/Users/jerom/reactNativeProjects/CookBook-main/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","createBottomTabNavigator","Ionicons","Home","Recipes","Categories","Plan","Favourites","Ampalaya","AdobongSitaw","BananaQue","Bibingka","BukoPie","ChickenCurry","AdobongIsda","GinataangAlimasag","Goto","Longsilog","Pinakbet","Salad","Sinangag","Spag","TinolangManok","TinolangTahong","Turon","Ukoy","Stack","Tab","App","headerShown","NavRec","headerRight","props","headerTitle","NavCat","NavFav","NavPlan","Breakfast","Snacks","Desserts","Lunch","Dinner","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Logo","width","height","marginRight","require"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport { Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport Home from \"./Screens/Home\";\nimport Recipes from \"./Screens/Recipes\";\nimport Categories from \"./Screens/Categories\";\nimport Plan from \"./Screens/Plan\";\nimport Favourites from \"./Screens/Favourites\";\nimport Ampalaya from \"./recipes/Ampalaya\";\nimport AdobongSitaw from \"./recipes/AdobongSitaw\";\nimport BananaQue from \"./recipes/BananaQue\";\nimport Bibingka from \"./recipes/Bibingka\";\nimport BukoPie from \"./recipes/BukoPie\";\nimport ChickenCurry from \"./recipes/ChickenCurry\";\nimport AdobongIsda from \"./recipes/AdobongIsda\";\nimport GinataangAlimasag from \"./recipes/GinataangAlimasag\";\nimport Goto from \"./recipes/Goto\";\nimport Longsilog from \"./recipes/Longsilog\";\nimport Pinakbet from \"./recipes/Pinakbet\";\nimport Salad from \"./recipes/Salad\";\nimport Sinangag from \"./recipes/Sinangag\";\nimport Spag from \"./recipes/Spag\";\nimport TinolangManok from \"./recipes/TinolangManok\";\nimport TinolangTahong from \"./recipes/TinolangTahong\";\nimport Turon from \"./recipes/Turon\";\nimport Ukoy from \"./recipes/Ukoy\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <StatusBar style=\"auto\" />\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"NavRec\"\n            component={NavRec}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"NavCat\"\n            component={NavCat}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"NavFav\"\n            component={NavFav}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"NavPlan\"\n            component={NavPlan}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Home\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Breakfast\"\n            component={Breakfast}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Snacks\"\n            component={Snacks}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Desserts\"\n            component={Desserts}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Lunch\"\n            component={Lunch}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Dinner\"\n            component={Dinner}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Ampalaya\"\n            component={Ampalaya}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"AdobongSitaw\"\n            component={AdobongSitaw}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"BananaQue\"\n            component={BananaQue}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Bibingka\"\n            component={Bibingka}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"BukoPie\"\n            component={BukoPie}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"ChickenCurry\"\n            component={ChickenCurry}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"AdobongIsda\"\n            component={AdobongIsda}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"GinataangAlimasag\"\n            component={GinataangAlimasag}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Goto\"\n            component={Goto}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Longsilog\"\n            component={Longsilog}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Pinakbet\"\n            component={Pinakbet}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Salad\"\n            component={Salad}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Sinangag\"\n            component={Sinangag}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Spag\"\n            component={Spag}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"TinolangManok\"\n            component={TinolangManok}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"TinolangTahong\"\n            component={TinolangTahong}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Turon\"\n            component={Turon}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Ukoy\"\n            component={Ukoy}\n            options={{\n              headerRight: (props) => <Logo {...props} />,\n              headerTitle: \"Back\",\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nclass NavRec extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Recipes\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />\n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavCat extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Categories\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />\n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavFav extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Favourites\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />\n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavPlan extends Component {\n  render() {\n    return (\n      <Tab.Navigator\n        initialRouteName=\"Plan\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Recipes\") {\n              iconName = focused ? \"md-restaurant\" : \"pizza\";\n            } else if (route.name === \"Categories\") {\n              iconName = focused ? \"list\" : \"book\";\n            } else if (route.name === \"Favourites\") {\n              iconName = focused ? \"heart-circle\" : \"heart\";\n            } else if (route.name === \"Plan\") {\n              iconName = focused ? \"calendar\" : \"bulb\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />\n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass Logo extends Component {\n  render() {\n    return (\n      <Image\n        style={{ width: 40, height: 40, marginRight: 30 }}\n        source={require(\"./assets/logo.png\")}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}