{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Home from \"./Screens/Home\";\nimport Recipes from \"./Screens/Recipes\";\nimport Categories from \"./Screens/Categories\";\nimport Plan from \"./Screens/Plan\";\nimport Favourites from \"./Screens/Favourites\";\nimport Breakfast from \"./category/Breakfast\";\nimport Snacks from \"./category/Snacks\";\nimport Desserts from \"./category/Desserts\";\nimport Lunch from \"./category/Lunch\";\nimport Dinner from \"./category/Dinner\";\nimport Ampalaya from \"./recipes/Ampalaya\";\nimport AdobongSitaw from \"./recipes/AdobongSitaw\";\nimport BananaQue from \"./recipes/BananaQue\";\nimport Bibingka from \"./recipes/Bibingka\";\nimport BukoPie from \"./recipes/BukoPie\";\nimport ChickenCurry from \"./recipes/ChickenCurry\";\nimport AdobongIsda from \"./recipes/AdobongIsda\";\nimport GinataangAlimasag from \"./recipes/GinataangAlimasag\";\nimport Goto from \"./recipes/Goto\";\nimport Longsilog from \"./recipes/Longsilog\";\nimport Pinakbet from \"./recipes/Pinakbet\";\nimport Salad from \"./recipes/Salad\";\nimport Sinangag from \"./recipes/Sinangag\";\nimport Spag from \"./recipes/Spag\";\nimport TinolangManok from \"./recipes/TinolangManok\";\nimport TinolangTahong from \"./recipes/TinolangTahong\";\nimport Turon from \"./recipes/Turon\";\nimport Ukoy from \"./recipes/Ukoy\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, null, React.createElement(StatusBar, {\n        style: \"auto\"\n      }), React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavRec\",\n        component: NavRec,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavCat\",\n        component: NavCat,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavFav\",\n        component: NavFav,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"NavPlan\",\n        component: NavPlan,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Home\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Breakfast\",\n        component: Breakfast,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Snacks\",\n        component: Snacks,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Desserts\",\n        component: Desserts,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Lunch\",\n        component: Lunch,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Dinner\",\n        component: Dinner,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Ampalaya\",\n        component: Ampalaya,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AdobongSitaw\",\n        component: AdobongSitaw,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BananaQue\",\n        component: BananaQue,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Bibingka\",\n        component: Bibingka,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BukoPie\",\n        component: BukoPie,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ChickenCurry\",\n        component: ChickenCurry,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"AdobongIsda\",\n        component: AdobongIsda,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"GinataangAlimasag\",\n        component: GinataangAlimasag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Goto\",\n        component: Goto,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Longsilog\",\n        component: Longsilog,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Pinakbet\",\n        component: Pinakbet,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Salad\",\n        component: Salad,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Sinangag\",\n        component: Sinangag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Spag\",\n        component: Spag,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TinolangManok\",\n        component: TinolangManok,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"TinolangTahong\",\n        component: TinolangTahong,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Turon\",\n        component: Turon,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Ukoy\",\n        component: Ukoy,\n        options: {\n          headerRight: function headerRight(props) {\n            return React.createElement(Logo, props);\n          },\n          headerTitle: \"Back\"\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar NavRec = function (_Component2) {\n  _inherits(NavRec, _Component2);\n\n  var _super2 = _createSuper(NavRec);\n\n  function NavRec() {\n    _classCallCheck(this, NavRec);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NavRec, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Recipes\",\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Recipes') {\n                iconName = focused ? 'md-restaurant' : 'pizza';\n              } else if (route.name === 'Categories') {\n                iconName = focused ? 'list' : 'book';\n              } else if (route.name === 'Favourites') {\n                iconName = focused ? 'heart-circle' : 'heart';\n              } else if (route.name === 'Plan') {\n                iconName = focused ? 'calendar' : 'bulb';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: 'tomato',\n            tabBarInactiveTintColor: 'gray'\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavRec;\n}(Component);\n\nvar NavCat = function (_Component3) {\n  _inherits(NavCat, _Component3);\n\n  var _super3 = _createSuper(NavCat);\n\n  function NavCat() {\n    _classCallCheck(this, NavCat);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(NavCat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Categories\",\n        screenOptions: function screenOptions(_ref3) {\n          var route = _ref3.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var focused = _ref4.focused,\n                  color = _ref4.color,\n                  size = _ref4.size;\n              var iconName;\n\n              if (route.name === 'Recipes') {\n                iconName = focused ? 'md-restaurant' : 'pizza';\n              } else if (route.name === 'Categories') {\n                iconName = focused ? 'list' : 'book';\n              } else if (route.name === 'Favourites') {\n                iconName = focused ? 'heart-circle' : 'heart';\n              } else if (route.name === 'Plan') {\n                iconName = focused ? 'calendar' : 'bulb';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: 'tomato',\n            tabBarInactiveTintColor: 'gray'\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavCat;\n}(Component);\n\nvar NavFav = function (_Component4) {\n  _inherits(NavFav, _Component4);\n\n  var _super4 = _createSuper(NavFav);\n\n  function NavFav() {\n    _classCallCheck(this, NavFav);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NavFav, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Favourites\",\n        screenOptions: function screenOptions(_ref5) {\n          var route = _ref5.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref6) {\n              var focused = _ref6.focused,\n                  color = _ref6.color,\n                  size = _ref6.size;\n              var iconName;\n\n              if (route.name === 'Recipes') {\n                iconName = focused ? 'md-restaurant' : 'pizza';\n              } else if (route.name === 'Categories') {\n                iconName = focused ? 'list' : 'book';\n              } else if (route.name === 'Favourites') {\n                iconName = focused ? 'heart-circle' : 'heart';\n              } else if (route.name === 'Plan') {\n                iconName = focused ? 'calendar' : 'bulb';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: 'tomato',\n            tabBarInactiveTintColor: 'gray'\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavFav;\n}(Component);\n\nvar NavPlan = function (_Component5) {\n  _inherits(NavPlan, _Component5);\n\n  var _super5 = _createSuper(NavPlan);\n\n  function NavPlan() {\n    _classCallCheck(this, NavPlan);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(NavPlan, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Plan\",\n        screenOptions: function screenOptions(_ref7) {\n          var route = _ref7.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref8) {\n              var focused = _ref8.focused,\n                  color = _ref8.color,\n                  size = _ref8.size;\n              var iconName;\n\n              if (route.name === 'Recipes') {\n                iconName = focused ? 'md-restaurant' : 'pizza';\n              } else if (route.name === 'Categories') {\n                iconName = focused ? 'list' : 'book';\n              } else if (route.name === 'Favourites') {\n                iconName = focused ? 'heart-circle' : 'heart';\n              } else if (route.name === 'Plan') {\n                iconName = focused ? 'calendar' : 'bulb';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: 'tomato',\n            tabBarInactiveTintColor: 'gray'\n          };\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Recipes\",\n        component: Recipes\n      }), React.createElement(Tab.Screen, {\n        name: \"Categories\",\n        component: Categories\n      }), React.createElement(Tab.Screen, {\n        name: \"Favourites\",\n        component: Favourites\n      }), React.createElement(Tab.Screen, {\n        name: \"Plan\",\n        component: Plan\n      }));\n    }\n  }]);\n\n  return NavPlan;\n}(Component);\n\nvar Logo = function (_Component6) {\n  _inherits(Logo, _Component6);\n\n  var _super6 = _createSuper(Logo);\n\n  function Logo() {\n    _classCallCheck(this, Logo);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(Logo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Image, {\n        style: {\n          width: 40,\n          height: 40,\n          marginRight: 30\n        },\n        source: require(\"./assets/logo.png\")\n      });\n    }\n  }]);\n\n  return Logo;\n}(Component);","map":{"version":3,"sources":["C:/Users/jerom/reactNativeProjects/CookBook-main/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","createBottomTabNavigator","Ionicons","Home","Recipes","Categories","Plan","Favourites","Breakfast","Snacks","Desserts","Lunch","Dinner","Ampalaya","AdobongSitaw","BananaQue","Bibingka","BukoPie","ChickenCurry","AdobongIsda","GinataangAlimasag","Goto","Longsilog","Pinakbet","Salad","Sinangag","Spag","TinolangManok","TinolangTahong","Turon","Ukoy","Stack","Tab","App","headerShown","NavRec","headerRight","props","headerTitle","NavCat","NavFav","NavPlan","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Logo","width","height","marginRight","require"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { Image} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport Home from './Screens/Home';\nimport Recipes from './Screens/Recipes';\nimport Categories from './Screens/Categories';\nimport Plan from './Screens/Plan';\nimport Favourites from './Screens/Favourites';\nimport Breakfast from './category/Breakfast';\nimport Snacks from './category/Snacks';\nimport Desserts from './category/Desserts';\nimport Lunch from './category/Lunch';\nimport Dinner from './category/Dinner';\nimport Ampalaya from './recipes/Ampalaya';\nimport AdobongSitaw from './recipes/AdobongSitaw';\nimport BananaQue from './recipes/BananaQue';\nimport Bibingka from './recipes/Bibingka';\nimport BukoPie from './recipes/BukoPie';\nimport ChickenCurry from './recipes/ChickenCurry';\nimport AdobongIsda from './recipes/AdobongIsda';\nimport GinataangAlimasag from './recipes/GinataangAlimasag';\nimport Goto from './recipes/Goto';\nimport Longsilog from './recipes/Longsilog';\nimport Pinakbet from './recipes/Pinakbet';\nimport Salad from './recipes/Salad';\nimport Sinangag from './recipes/Sinangag';\nimport Spag from './recipes/Spag';\nimport TinolangManok from './recipes/TinolangManok';\nimport TinolangTahong from './recipes/TinolangTahong';\nimport Turon from './recipes/Turon';\nimport Ukoy from './recipes/Ukoy';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends Component{\n  render() {\n    return (\n      <NavigationContainer>\n      <StatusBar style= \"auto\" />\n        <Stack.Navigator>\n         <Stack.Screen name=\"Home\" component={Home}  options={{headerShown:false}}/>\n          <Stack.Screen name=\"NavRec\" component={NavRec} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Home\"\n            }}/>\n          <Stack.Screen name=\"NavCat\" component={NavCat} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Home\"\n            }}/>\n          <Stack.Screen name=\"NavFav\" component={NavFav} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Home\"\n            }}/>\n          <Stack.Screen name=\"NavPlan\" component={NavPlan} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Home\"\n            }}/>\n             <Stack.Screen name=\"Breakfast\" component={Breakfast} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"Snacks\" component={Snacks} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"Desserts\" component={Desserts} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"Lunch\" component={Lunch} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"Dinner\" component={Dinner} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"Ampalaya\" component={Ampalaya} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"AdobongSitaw\" component={AdobongSitaw} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n            <Stack.Screen name=\"BananaQue\" component={BananaQue} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Bibingka\" component={Bibingka} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n              <Stack.Screen name=\"BukoPie\" component={BukoPie} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n              <Stack.Screen name=\"ChickenCurry\" component={ChickenCurry} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"AdobongIsda\" component={AdobongIsda} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"GinataangAlimasag\" component={GinataangAlimasag} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Goto\" component={Goto} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Longsilog\" component={Longsilog} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Pinakbet\" component={Pinakbet} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Salad\" component={Salad} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Sinangag\" component={Sinangag} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Spag\" component={Spag} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"TinolangManok\" component={TinolangManok} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"TinolangTahong\" component={TinolangTahong} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Turon\" component={Turon} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n             <Stack.Screen name=\"Ukoy\" component={Ukoy} options={{\n              headerRight: props => <Logo {...props} />,\n              headerTitle: \"Back\"\n            }}/>\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nclass NavRec extends Component {\n  render() {\n    return (\n      <Tab.Navigator initialRouteName=\"Recipes\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Recipes') {\n            iconName = focused\n              ? 'md-restaurant'\n              : 'pizza';\n          } else if (route.name === 'Categories') {\n            iconName = focused ? 'list' : 'book';\n          }\n          else if (route.name === 'Favourites') {\n            iconName = focused ? 'heart-circle' : 'heart';\n          }\n          else if (route.name === 'Plan') {\n            iconName = focused ? 'calendar' : 'bulb';\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />\n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavCat extends Component {\n  render() {\n    return (\n      <Tab.Navigator  initialRouteName=\"Categories\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Recipes') {\n            iconName = focused\n              ? 'md-restaurant'\n              : 'pizza';\n          } else if (route.name === 'Categories') {\n            iconName = focused ? 'list' : 'book';\n          }\n          else if (route.name === 'Favourites') {\n            iconName = focused ? 'heart-circle' : 'heart';\n          }\n          else if (route.name === 'Plan') {\n            iconName = focused ? 'calendar' : 'bulb';\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />  \n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavFav extends Component {\n  render() {\n    return (\n      <Tab.Navigator  initialRouteName=\"Favourites\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Recipes') {\n            iconName = focused\n              ? 'md-restaurant'\n              : 'pizza';\n          } else if (route.name === 'Categories') {\n            iconName = focused ? 'list' : 'book';\n          }\n          else if (route.name === 'Favourites') {\n            iconName = focused ? 'heart-circle' : 'heart';\n          }\n          else if (route.name === 'Plan') {\n            iconName = focused ? 'calendar' : 'bulb';\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />  \n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass NavPlan extends Component {\n  render() {\n    return (\n      <Tab.Navigator  initialRouteName=\"Plan\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Recipes') {\n            iconName = focused\n              ? 'md-restaurant'\n              : 'pizza';\n          } else if (route.name === 'Categories') {\n            iconName = focused ? 'list' : 'book';\n          }\n          else if (route.name === 'Favourites') {\n            iconName = focused ? 'heart-circle' : 'heart';\n          }\n          else if (route.name === 'Plan') {\n            iconName = focused ? 'calendar' : 'bulb';\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n        <Tab.Screen name=\"Recipes\" component={Recipes} />\n        <Tab.Screen name=\"Categories\" component={Categories} />  \n        <Tab.Screen name=\"Favourites\" component={Favourites} />\n        <Tab.Screen name=\"Plan\" component={Plan} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nclass Logo extends Component {\n  render() {\n    return (\n     <Image\n        style={{ width: 40, height: 40 , marginRight: 30}}\n        source={require('./assets/logo.png')}\n      /> \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}